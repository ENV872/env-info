RStudio.Version
source('~/github/env-info/make.R')
source('~/github/env-info/make.R')
R_v       = '3.2.3'
RStudio_v = '0.99.841'
# check R version ----
if (getRversion() < R_v){
stop(sprintf('Your version of R (%s) is older than the expected minimum R version (%s). Please close R/RStudio and install the latest version of R from http://cran.r-project.org.', getRversion(), R_v))
} else {
cat('R version is correct.\n')
}
# check for latest version of R (http://www.rdocumentation.org/packages/gtools/functions/checkRVersion)
# gtools::checkRVersion() # require(gtools)
# check RStudio version ----
if (RStudio.Version()$version < RStudio_v){
stop(sprintf('Your version of RStudio (%s) is older than the expected minimum RStudio version (%s). Please close R/RStudio and install the latest version of RStudio from https://www.rstudio.com/products/rstudio/download/.', RStudio.Version()$version, RStudio_v))
} else {
cat('Rstudio version is correct.\n')
}
tools::Rstudio
RStudio
RStudio.Version
RStudio.Version()
# parameters
R_v       = '3.2.3'
RStudio_v = '0.99.841'
# check R version ----
if (getRversion() < R_v){
stop(sprintf('Your version of R (%s) is older than the expected minimum R version (%s). Please close R/RStudio and install the latest version of R from http://cran.r-project.org.', getRversion(), R_v))
} else {
cat(sprintf('Your version of R (%s) is valid, ie newer or the same as expected minimum R version (%s).', getRversion(), R_v))
}
# check RStudio version ----
if (RStudio.Version()$version < RStudio_v){
stop(sprintf('Your version of RStudio (%s) is older than the expected minimum RStudio version (%s). Please close R/RStudio and install the latest version of RStudio from https://www.rstudio.com/products/rstudio/download/.', RStudio.Version()$version, RStudio_v))
} else {
cat(' version is correct.\n')
cat(sprintf('Your version of Rstudio (%s) is valid, ie newer or the same as expected minimum Rstudio version (%s).', RStudio.Version()$version, RStudio_v))
}
R_v       = '3.2.3'
RStudio_v = '0.99.841'
# check R version ----
if (getRversion() < R_v){
stop(sprintf('Your version of R (%s) is older than the expected minimum R version (%s). Please close R/RStudio and install the latest version of R from http://cran.r-project.org.', getRversion(), R_v))
} else {
cat(sprintf('Your version of R (%s) is valid, ie newer or the same as expected minimum R version (%s).', getRversion(), R_v))
}
# check RStudio version ----
if (RStudio.Version()$version < RStudio_v){
stop(sprintf('Your version of RStudio (%s) is older than the expected minimum RStudio version (%s). Please close R/RStudio and install the latest version of RStudio from https://www.rstudio.com/products/rstudio/download/.', RStudio.Version()$version, RStudio_v))
} else {
cat(sprintf('Your version of Rstudio (%s) is valid, ie newer or the same as expected minimum Rstudio version (%s).', RStudio.Version()$version, RStudio_v))
}
source('~/github/env-info/make.R')
getwd()
setwd('wk01_github')
file.exists('../img/Gandrud2013_ReproducibleResearchRstudio_cover.png')
getwd()
setwd(..)
setwd('..')
list.files('refs/cheatsheets')
for (f in list.files('refs/cheatsheets')){
cat(sprintf('- [%s](refs/cheatsheets/%s)', f, f))
}
for (f in list.files('refs/cheatsheets')){
cat(sprintf('- [%s](refs/cheatsheets/%s)\n', f, f))
}
for (f in list.files('refs/lit')){
cat(sprintf('- [%s](refs/lit/%s)\n', f, f))
}
Sys.getenv('R_HOME')
Singleton_Country_Aggregates <- read.csv("~/Desktop/Singleton_Country_Aggregates.csv")
View(Singleton_Country_Aggregates)
summary(Singleton_Country_Aggregates)
setwd(~/data)
setwd(/~data)
getwd()
setwd("~/data")
setwd("/data")
# Run this chunk only once in your Console
# Do not evaluate when knitting Rmarkdown
# list of packages
pkgs = c(
'readr',        # read csv
'readxl',       # read xls
'dplyr',        # data frame manipulation
'tidyr',        # data tidying
'nycflights13', # test dataset of NYC flights for 2013
'gapminder')    # test dataset of life expectancy and popultion
# install packages if not found
for (p in pkgs){
if (!require(p, character.only=T)){
install.packages(p)
}
}
library(readr)
d = read_csv('../data/r-ecology/species.csv')
d
head(d)
summary(d)
setwd()
```{r}
# present working directory
getwd()
# change working directory
setwd('.')
# list files
list.files()
# list files that end in '.jpg'
list.files(pattern=glob2rx('*.jpg'))
# file exists
file.exists('test.png')
getwd()
ls
dir()
d = read.csv('./data/r-ecology/species.csv')
d
head(d)
summary(d)
library(readr)
d = read_csv('./data/r-ecology/species.csv')
d
head(d)
summary(d)
d = read.csv('./data/r-ecology/species.csv')
d
head(d)
summary(d)
View(d)
library(readr)
d = read_csv('./data/r-ecology/species.csv')
d
head(d)
summary(d)
View(d)
?read_csv
library('taxize')
install.packages('taxize')
R_Version()
R.Version()
library(taxize)
d = read_csv('./data/r-ecology/species.csv') %>%
select(species_id,year)
library(readr)
library(dplyr)
d = read_csv('./data/r-ecology/species.csv') %>%
select(species_id,year)
d = read_csv('./data/r-ecology/surveys.csv') %>%
select(species_id,year)
read_csv('./data/r-ecology/surveys.csv') %>%
select(species_id,year)
read_csv('./data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
filter(species_id=='NL')%>%
group_by(year)%>%
summarize(count=n())
read_csv('./data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
filter(species_id=='NL')%>%
group_by(year)
read_csv('./data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
filter(species_id=='NL')
read_csv('./data/r-ecology/surveys.csv') %>%
select(species_id,year)
read_csv('./data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
#filter(species_id=='NL')%>%
group_by(year)%>%
summarize(count=n())
read_csv('./data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
#filter(species_id=='NL')%>%
group_by(species_id,year)%>%
summarize(count=n())
?head
install.packages("devtools")
devtools::install_github("rstudio/EDAWR")
library(EDAWR)
?storms
names(storms)
names(storms)[-1]
names(storms)[-3]
storms
type(storms)
class(storms)
read_csv('./data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
#filter(species_id=='NL')%>%
group_by(species_id,year)%>%
summarize(count=n())
# Run this chunk only once in your Console
# Do not evaluate when knitting Rmarkdown
# list of packages
pkgs = c(
'readr',        # read csv
'readxl',       # read xls
'dplyr',        # data frame manipulation
'tidyr',        # data tidying
'nycflights13', # test dataset of NYC flights for 2013
'gapminder')    # test dataset of life expectancy and popultion
# install packages if not found
for (p in pkgs){
if (!require(p, character.only=T)){
install.packages(p)
}
}
Singleton_Country_Aggregates = read.csv('./data/zebos1_Singleton_Country_Aggregates.csv')
summary(Singleton_Country_Aggregates)
read_csv('../data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
#filter(species_id=='NL')%>%
group_by(species_id,year)
dir()
setwd("students")
read_csv('../data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
#filter(species_id=='NL')%>%
group_by(species_id,year)
?count
read_csv('../data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
#filter(species_id=='NL')%>%
group_by(species_id,year)%>%
count()
read_csv('../data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
#filter(species_id=='NL')%>%
group_by(species_id,year)%>%
count(species_id,year)
read_csv('../data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
#filter(species_id=='NL')%>%
group_by(species_id,year)%>%
class(count(species_id,year))
read_csv('../data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
#filter(species_id=='NL')%>%
group_by(species_id,year)%>%
count(species_id,year)
read_csv('../data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
#filter(species_id=='NL')%>%
group_by(species_id,year)%>%
count(species_id,year)%>%
class()
d=read_csv('../data/r-ecology/surveys.csv') %>%
d=select(species_id,year)%>%
#filter(species_id=='NL')%>%
d=group_by(species_id,year)%>%
d=count(species_id,year)
head(d)
summary(d)
glimpse(d)
d=read_csv('../data/r-ecology/surveys.csv') %>%
d=select(species_id,year)
read_csv('../data/r-ecology/surveys.csv')
read_csv('../data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
#filter(species_id=='NL')%>%
group_by(species_id,year)%>%
d=count(species_id,year)
read_csv('../data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
#filter(species_id=='NL')%>%
group_by(species_id,year)%>%
count(species_id,year)
# Run this chunk only once in your Console
# Do not evaluate when knitting Rmarkdown
# list of packages
pkgs = c(
'readr',        # read csv
'readxl',       # read xls
'dplyr',        # data frame manipulation
'tidyr',        # data tidying
'nycflights13', # test dataset of NYC flights for 2013
'gapminder')    # test dataset of life expectancy and popultion
# install packages if not found
for (p in pkgs){
if (!require(p, character.only=T)){
install.packages(p)
}
}
Singleton_Country_Aggregates = read.csv('./data/zebos1_Singleton_Country_Aggregates.csv')
summary(Singleton_Country_Aggregates)
library(readr)
library(readr)
library(dplyr)
read_csv('../data/r-ecology/surveys.csv') %>%
select(species_id,year)%>%
#filter(species_id=='NL')%>%
group_by(species_id,year)%>%
count(species_id,year)%>%
head()
library(devtools)
?EDAWR
library(EDAWR)
View(storms)
storms$storm
storms$wind
storms$pressure
storms$date
