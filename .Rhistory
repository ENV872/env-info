RStudio.Version
source('~/github/env-info/make.R')
source('~/github/env-info/make.R')
R_v       = '3.2.3'
RStudio_v = '0.99.841'
# check R version ----
if (getRversion() < R_v){
stop(sprintf('Your version of R (%s) is older than the expected minimum R version (%s). Please close R/RStudio and install the latest version of R from http://cran.r-project.org.', getRversion(), R_v))
} else {
cat('R version is correct.\n')
}
# check for latest version of R (http://www.rdocumentation.org/packages/gtools/functions/checkRVersion)
# gtools::checkRVersion() # require(gtools)
# check RStudio version ----
if (RStudio.Version()$version < RStudio_v){
stop(sprintf('Your version of RStudio (%s) is older than the expected minimum RStudio version (%s). Please close R/RStudio and install the latest version of RStudio from https://www.rstudio.com/products/rstudio/download/.', RStudio.Version()$version, RStudio_v))
} else {
cat('Rstudio version is correct.\n')
}
tools::Rstudio
RStudio
RStudio.Version
RStudio.Version()
# parameters
R_v       = '3.2.3'
RStudio_v = '0.99.841'
# check R version ----
if (getRversion() < R_v){
stop(sprintf('Your version of R (%s) is older than the expected minimum R version (%s). Please close R/RStudio and install the latest version of R from http://cran.r-project.org.', getRversion(), R_v))
} else {
cat(sprintf('Your version of R (%s) is valid, ie newer or the same as expected minimum R version (%s).', getRversion(), R_v))
}
# check RStudio version ----
if (RStudio.Version()$version < RStudio_v){
stop(sprintf('Your version of RStudio (%s) is older than the expected minimum RStudio version (%s). Please close R/RStudio and install the latest version of RStudio from https://www.rstudio.com/products/rstudio/download/.', RStudio.Version()$version, RStudio_v))
} else {
cat(' version is correct.\n')
cat(sprintf('Your version of Rstudio (%s) is valid, ie newer or the same as expected minimum Rstudio version (%s).', RStudio.Version()$version, RStudio_v))
}
R_v       = '3.2.3'
RStudio_v = '0.99.841'
# check R version ----
if (getRversion() < R_v){
stop(sprintf('Your version of R (%s) is older than the expected minimum R version (%s). Please close R/RStudio and install the latest version of R from http://cran.r-project.org.', getRversion(), R_v))
} else {
cat(sprintf('Your version of R (%s) is valid, ie newer or the same as expected minimum R version (%s).', getRversion(), R_v))
}
# check RStudio version ----
if (RStudio.Version()$version < RStudio_v){
stop(sprintf('Your version of RStudio (%s) is older than the expected minimum RStudio version (%s). Please close R/RStudio and install the latest version of RStudio from https://www.rstudio.com/products/rstudio/download/.', RStudio.Version()$version, RStudio_v))
} else {
cat(sprintf('Your version of Rstudio (%s) is valid, ie newer or the same as expected minimum Rstudio version (%s).', RStudio.Version()$version, RStudio_v))
}
source('~/github/env-info/make.R')
getwd()
setwd('wk01_github')
file.exists('../img/Gandrud2013_ReproducibleResearchRstudio_cover.png')
getwd()
setwd(..)
setwd('..')
list.files('refs/cheatsheets')
for (f in list.files('refs/cheatsheets')){
cat(sprintf('- [%s](refs/cheatsheets/%s)', f, f))
}
for (f in list.files('refs/cheatsheets')){
cat(sprintf('- [%s](refs/cheatsheets/%s)\n', f, f))
}
for (f in list.files('refs/lit')){
cat(sprintf('- [%s](refs/lit/%s)\n', f, f))
}
Sys.getenv('R_HOME')
"organization": "citizen-monitoring"
pcp <- read.csv("~/Desktop/Informatics/testclim/pcp.txt", sep="")
View(pcp)
pcp = read.table("pcp.txt", header=T)
plot (pcp$meters, type="l", col="blue")
plot (pcp$meters,pcp$date, type="l", col="blue")
d = read.csv('placeholderpcp.csv')
d = read.csv('jebone_placeholderpcp.csv')
summary(d)
d = read.csv('jebone_placeholderpcp.csv')
setwd("~/Desktop/Informatics/env-info-test/students/data")
d = read.csv('jebone_placeholderpcp.csv')
summary(d)
summary(d)
Survey data has been collected from various participants in Uganda.
---
title: "jebone"
author: "Jennifer Bone"
date: "January 15, 2016"
output:
html_document:
toc: true
toc_depth: 2
```{r}
#read csv
d = read.csv('jebone_placeholderpcp.csv')
# output summary
summary(d)
```
---
## Content
*Can citizen monitoring improve municipal waste managment in Uganda?*
Specifically, we are interested in developing a data set that automatically updates as new data becomes available.
![](images/muganda.png)
* **More about:**
+ [citizen science](https://en.wikipedia.org/wiki/Municipal_solid_waste)
## Techniques
Data management and visualization
## Data
Survey data has been collected from various participants in Uganda.
d = read.csv('jebone_ugandaSMS.csv')
setwd("~/Desktop/Informatics/env-info-test/students/data")
d = read.csv('jebone_ugandaSMS.csv')
summary(d)
summary(d)
setwd("~/Desktop/Informatics/env-info-test/students")
getwd()
d = read.csv('jebone_ugandaSMS.csv')
summary(d)
d = read.csv('data/jebone_ugandaSMS.csv')
summary(d)
d = read.csv('data/jebone_ugandaSMS.csv')
summary(d)
[**Citizen Monitoring**](http://citizen-monitoring.github.io)
[**Citizen Monitoring**](http://github.com/<citizen-monitoring>/<citizen-monitoring>.github.io)
install.packages("devtools")
devtools::install_github("rstudio/EDAWR")
library(EDAWR)
help(package='EDAWR')
View(storms)
devtools::install_github("rstudio/EDAWR")
storms$storm
storms$wind
storms$pressure
cases$country
names(cases)[-1]
View(cases)
unlist(cases[1:3, 2:4])
pollution$city[1,3,5]
pollution$amount[1,3,5]
pollution$amount[2,4,6]
pollution$city[c(1,3,5)]
pollution$amount[c(1,3,5)]
pollution$amount[c(2,4,6)]
cases
gather(cases, "year", "n", 2:4)
library(tidyr)
cases
gather(cases, "year", "n", 2:4)
gather(cases, "year", "n", -country)
gather(cases, "year", "n", 2:4) # if use "-2" instead of 2:4 it will take out the second column
country %in% c('FR','US')
cases%>%
gather("year", "n", -country)%>%
filter(
year %in% c(2011,2013),
country %in% c('FR','US'))
cases%>%
gather("year", "n", -country)%>%
filter(
year %in% c(2011,2013),
!country %in% c('FR','US'))
cases%>%
gather("year", "n", -country)%>%
filter(
year %in% c(2011,2013),
!country %in% c('FR','US'))
cases%>%
gather("year", "n", -country)%>%
filter(
year %in% c(2011,2013),
!country %in% c('FR','US'))
cases%>%
cases %>%
cases
cases
cases
cases %>%
gather("year", "n", -country)%>%
filter(
year %in% c(2011,2013),
!country %in% c('FR','US'))
gather("year", "n", -country)
library(tidyr)
library(dplyr)
cases %>%
gather("year", "n", -country)%>%
filter(
year %in% c(2011,2013),
!country %in% c('FR','US'))
pollution
spread(pollution, size, amount)
storms
storms2 = separate(storms, date, c("year", "month", "day"), sep = "-")
storms2
mutate(date_str=as.character(date))
storms%>%
mutate(date_str=as.character(date))
storms2 = separate(storms, date, c("year", "month", "day"), sep = c(4,6)) #use dash as the seperator
storms2
devtools::install_github("rstudio/EDAWR")
library(readxl)# install.packages('readxl')
url = 'http://edgar.jrc.ec.europa.eu/news_docs/CO2_1970-2014_dataset_of_CO2_report_2015.xls'
xls = '../data/co2_europa.xls'
print(getwd())
if (!file.exists(xls)){
download.file(url, xls)
}
co2 = read_excel(xls, skip=12)
From the [data-wrangling-cheatsheet.pdf](./refs/cheatsheets/data-wrangling-cheatsheet.pdf):
setwd("~/Desktop/Informatics/env-info-test/students")
url = 'http://edgar.jrc.ec.europa.eu/news_docs/CO2_1970-2014_dataset_of_CO2_report_2015.xls'
xls = '../data/co2_europa.xls'
co2 = read_excel(xls, skip=12)
setwd("~/Desktop/Informatics/env-info-test/data")
xls = '../data/co2_europa.xls'
xls = '../data/co2_europa.xls'
library(readxl)# install.packages('readxl')
url = 'http://edgar.jrc.ec.europa.eu/news_docs/CO2_1970-2014_dataset_of_CO2_report_2015.xls'
xls = '../data/co2_europa.xls'
print(getwd())
if (!file.exists(xls)){
download.file(url, xls)
}
co2 = read_excel(xls, skip=12)
co2
View(co2)
names(co2)<-c(1970:2014)
View(co2)
names(co2)<-c(country,1970:2014)
names(co2)<-c(country, 1970, 1971:2014)
names(co2)<-c('country', 1970:2014)
View(co2)
gather('year','n', 2:46)
d=co2%>%
gather('year','n', 2:46)
View(d)
name(co2)<-c('country','year','CO2 emissions')
d=co2%>%
gather('year','n', 2:46)%>%
name(co2)<-c('country','year','CO2 emissions')
View(d)
d=co2%>%
gather('year','emissions', 2:46)
View(d)
d=co2%>%
gather('year','emissions (Ktons CO2)', 2:46)
View(d)
library(dplyr)
library(dplyr)
d=co2%>%
gather('year','emissions (Ktons CO2)', 2:46)%>%
arrange(desc(emissions))
d=co2%>%
gather('year','emissions (Ktons CO2)', 2:46)%>%
arrange(desc(emissions (Ktons CO2)))
d=co2%>%
gather('year','emissions Ktons CO2', 2:46)%>%
arrange(desc(emissions Ktons CO2))
d=co2%>%
gather('year','emissions Ktons CO2', 2:46)%>%
arrange(desc('emissions Ktons CO2'))
d=co2%>%
gather('year','emissions', 2:46)%>%
arrange(desc('emissions'))
?arrange
d=co2%>%
gather('year','emissions', 2:46)%>%
arrange(desc(emissions))
View(d)
d=co2%>%
gather('year','emissions', 2:46)%>%
arrange('country','year')
d=co2%>%
gather('year','emissions', 2:46)%>%
arrange(country,year)
View(d)
library(dplyr)
library(tidyr)
#table transformation
d=co2%>%
gather('year','emissions', 2:46)%>%
arrange(country,year)
View(d)
?arrange
print(getwd())
setwd("~/Desktop/Informatics/env-info-test/students")
dir_child = 'students'
if (dir_child %in% list.files()){
if (interactive()) {
# R Console
setwd(dir_child)
} else {
# knitting
knitr::opts_knit$set(root.dir=dir_child)
}
}
library(readxl)# install.packages('readxl')
url = 'http://edgar.jrc.ec.europa.eu/news_docs/CO2_1970-2014_dataset_of_CO2_report_2015.xls'
xls = '../data/co2_europa.xls'
print(getwd())
if (!file.exists(xls)){
download.file(url, xls)
}
co2 = read_excel(xls, skip=12)
View(co2)
names(co2)<-c('country', 1970:2014)
View(co2)
library(dplyr)
library(tidyr)
#table transformation
d=co2%>%
gather('year','emissions', 2:46)%>%
arrange(country,year)
View(d)
?arrange
library(dplyr)
library(tidyr)
#table transformation
d=co2%>%
gather('year','emissions', 2:46)%>%
arrange(country,year)
View(d)
?arrange
print(getwd())
dir_child = 'students'
if (dir_child %in% list.files()){
if (interactive()) {
# R Console
setwd(dir_child)
} else {
# knitting
knitr::opts_knit$set(root.dir=dir_child)
}
}
library(readxl)# install.packages('readxl')
url = 'http://edgar.jrc.ec.europa.eu/news_docs/CO2_1970-2014_dataset_of_CO2_report_2015.xls'
xls = '../data/co2_europa.xls'
print(getwd())
if (!file.exists(xls)){
download.file(url, xls)
}
co2 = read_excel(xls, skip=12)
View(co2)
names(co2)<-c('country', 1970:2014)
View(co2)
library(dplyr)
library(tidyr)
#table transformation
d=co2%>%
gather('year','emissions', 2:46)%>%
arrange(country,year)
View(d)
?arrange
library(readxl)# install.packages('readxl')
url = 'http://edgar.jrc.ec.europa.eu/news_docs/CO2_1970-2014_dataset_of_CO2_report_2015.xls'
xls = '../data/co2_europa.xls'
print(getwd())
if (!file.exists(xls)){
download.file(url, xls)
}
co2 = read_excel(xls, skip=12)
View(co2)
names(co2)<-c('country', 1970:2014)
View(co2)
library(dplyr)
library(tidyr)
#table transformation
d=co2%>%
gather('year','emissions', 2:46)%>%
arrange(country,year)
View(d)
?arrange
